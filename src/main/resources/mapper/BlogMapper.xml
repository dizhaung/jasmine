<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="core.com.dao.BlogMapper" >
  <resultMap id="BaseResultMap" type="core.com.model.Blog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="gid" property="gid" jdbcType="VARCHAR" />
    <result column="user_gid" property="userGid" jdbcType="VARCHAR" />
    <result column="menu_gid" property="menuGid" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
    <result column="blog_title" property="blogTitle" jdbcType="VARCHAR" />
    <result column="views" property="views" jdbcType="INTEGER" />
    <result column="is_top" property="isTop" jdbcType="BIT" />
  </resultMap>

  <resultMap id="menuBlogMap" type="core.com.model.mapper.BlogInfoModel" >
    <result column="gid" property="gid" jdbcType="VARCHAR" />
    <result column="user_gid" property="userGid" jdbcType="VARCHAR" />
    <result column="menu_gid" property="menuGid" jdbcType="VARCHAR" />
    <result column="blog_title" property="blogTitle" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="views" property="views" jdbcType="INTEGER" />
    <result column="is_top" property="isTop" jdbcType="BIT" />
    <result column="blog_type_name" property="menuName" jdbcType="VARCHAR" />

  </resultMap>

  <resultMap id="ResultMapWithBLOBs" type="core.com.model.Blog" extends="BaseResultMap" >
    <result column="blog_content" property="blogContent" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, gid, user_gid, menu_gid, create_time, update_time, blog_title, views, is_top
  </sql>
  <sql id="Blob_Column_List" >
    blog_content
  </sql>
  <select id="selectByExampleWithBLOBs" resultMap="ResultMapWithBLOBs" parameterType="core.com.model.BlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="core.com.model.BlogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from blog
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from blog
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="core.com.model.BlogExample" >
    delete from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="core.com.model.Blog" >
    insert into blog (id, gid, user_gid, 
      menu_gid, create_time, update_time, 
      blog_title, views, is_top, 
      blog_content)
    values (#{id,jdbcType=INTEGER}, #{gid,jdbcType=VARCHAR}, #{userGid,jdbcType=VARCHAR}, 
      #{menuGid,jdbcType=VARCHAR}, #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}, 
      #{blogTitle,jdbcType=VARCHAR}, #{views,jdbcType=INTEGER}, #{isTop,jdbcType=BIT}, 
      #{blogContent,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="core.com.model.Blog" >
    insert into blog
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="gid != null" >
        gid,
      </if>
      <if test="userGid != null" >
        user_gid,
      </if>
      <if test="menuGid != null" >
        menu_gid,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
      <if test="blogTitle != null" >
        blog_title,
      </if>
      <if test="views != null" >
        views,
      </if>
      <if test="isTop != null" >
        is_top,
      </if>
      <if test="blogContent != null" >
        blog_content,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="gid != null" >
        #{gid,jdbcType=VARCHAR},
      </if>
      <if test="userGid != null" >
        #{userGid,jdbcType=VARCHAR},
      </if>
      <if test="menuGid != null" >
        #{menuGid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="blogTitle != null" >
        #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="views != null" >
        #{views,jdbcType=INTEGER},
      </if>
      <if test="isTop != null" >
        #{isTop,jdbcType=BIT},
      </if>
      <if test="blogContent != null" >
        #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="core.com.model.BlogExample" resultType="java.lang.Integer" >
    select count(*) from blog
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update blog
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.gid != null" >
        gid = #{record.gid,jdbcType=VARCHAR},
      </if>
      <if test="record.userGid != null" >
        user_gid = #{record.userGid,jdbcType=VARCHAR},
      </if>
      <if test="record.menuGid != null" >
        menu_gid = #{record.menuGid,jdbcType=VARCHAR},
      </if>
      <if test="record.createTime != null" >
        create_time = #{record.createTime,jdbcType=INTEGER},
      </if>
      <if test="record.updateTime != null" >
        update_time = #{record.updateTime,jdbcType=INTEGER},
      </if>
      <if test="record.blogTitle != null" >
        blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="record.views != null" >
        views = #{record.views,jdbcType=INTEGER},
      </if>
      <if test="record.isTop != null" >
        is_top = #{record.isTop,jdbcType=BIT},
      </if>
      <if test="record.blogContent != null" >
        blog_content = #{record.blogContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExampleWithBLOBs" parameterType="map" >
    update blog
    set id = #{record.id,jdbcType=INTEGER},
      gid = #{record.gid,jdbcType=VARCHAR},
      user_gid = #{record.userGid,jdbcType=VARCHAR},
      menu_gid = #{record.menuGid,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      views = #{record.views,jdbcType=INTEGER},
      is_top = #{record.isTop,jdbcType=BIT},
      blog_content = #{record.blogContent,jdbcType=LONGVARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update blog
    set id = #{record.id,jdbcType=INTEGER},
      gid = #{record.gid,jdbcType=VARCHAR},
      user_gid = #{record.userGid,jdbcType=VARCHAR},
      menu_gid = #{record.menuGid,jdbcType=VARCHAR},
      create_time = #{record.createTime,jdbcType=INTEGER},
      update_time = #{record.updateTime,jdbcType=INTEGER},
      blog_title = #{record.blogTitle,jdbcType=VARCHAR},
      views = #{record.views,jdbcType=INTEGER},
      is_top = #{record.isTop,jdbcType=BIT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="core.com.model.Blog" >
    update blog
    <set >
      <if test="gid != null" >
        gid = #{gid,jdbcType=VARCHAR},
      </if>
      <if test="userGid != null" >
        user_gid = #{userGid,jdbcType=VARCHAR},
      </if>
      <if test="menuGid != null" >
        menu_gid = #{menuGid,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
      <if test="blogTitle != null" >
        blog_title = #{blogTitle,jdbcType=VARCHAR},
      </if>
      <if test="views != null" >
        views = #{views,jdbcType=INTEGER},
      </if>
      <if test="isTop != null" >
        is_top = #{isTop,jdbcType=BIT},
      </if>
      <if test="blogContent != null" >
        blog_content = #{blogContent,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="core.com.model.Blog" >
    update blog
    set gid = #{gid,jdbcType=VARCHAR},
      user_gid = #{userGid,jdbcType=VARCHAR},
      menu_gid = #{menuGid,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      blog_title = #{blogTitle,jdbcType=VARCHAR},
      views = #{views,jdbcType=INTEGER},
      is_top = #{isTop,jdbcType=BIT},
      blog_content = #{blogContent,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="core.com.model.Blog" >
    update blog
    set gid = #{gid,jdbcType=VARCHAR},
      user_gid = #{userGid,jdbcType=VARCHAR},
      menu_gid = #{menuGid,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER},
      blog_title = #{blogTitle,jdbcType=VARCHAR},
      views = #{views,jdbcType=INTEGER},
      is_top = #{isTop,jdbcType=BIT}
    where id = #{id,jdbcType=INTEGER}
  </update>

  <select id="queryBlogByMenuType" parameterType="java.lang.String" resultMap="menuBlogMap">
    SELECT
      t.gid,
      t.user_gid,
      t.menu_gid,
      t.blog_title,
      t.create_time,
      t.views,
      t.is_top,
      t1.blog_type_name
    FROM blog t
      LEFT JOIN sys_menu t1
        ON t.menu_gid = t1.gid
    <if test="menuType != null" >
      WHERE t1.gid = #{menuType,jdbcType=VARCHAR}
    </if>
  </select>
</mapper>